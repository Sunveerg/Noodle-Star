name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      - uses: actions/checkout@v4

      # Use Node.js
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: './noodlestar-frontend/package-lock.json'

      # Debug the package-lock.json path
      - name: Debug package-lock.json path
        run: ls -l ./noodlestar-frontend

      # Install Docker Compose
      - name: Install Docker Compose
        run: sudo apt-get update && sudo apt-get install -y docker-compose

      # Build Docker containers
      - name: Build Docker containers
        run: docker-compose -f ./NoodleStar/docker-compose.yml build

      # Start Docker containers
      - name: Start Docker containers
        run: docker-compose -f ./NoodleStar/docker-compose.yml up -d

      # Install dependencies using npm ci
      - name: Install dependencies
        run: npm ci
        working-directory: ./noodlestar-frontend

      # Run npm lint to ensure frontend code is linted
      - name: Run npm lint to ensure frontend code is linted
        run: npm run lint
        working-directory: ./noodlestar-frontend

      # Run build to ensure no build errors
      - name: Run build to ensure no build errors
        run: npm run build
        working-directory: ./noodlestar-frontend
