name: Qodana
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
      - 'releases/*'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      checks: write
    steps:
      # Checkout the code
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Set up Docker
      - name: Set up Docker
        run: |
          sudo apt-get update
          sudo apt-get remove -y containerd docker docker-engine docker.io docker-ce docker-ce-cli
          sudo apt-get install -y \
            apt-transport-https \
            ca-certificates \
            curl \
            software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin

      # Build the project using Docker Compose
      - name: Build project with Docker Compose
        run: docker compose build
        working-directory: ./NoodleStar

      # Optionally, run tests using Docker Compose
      - name: Run tests with Docker Compose
        run: docker compose up --abort-on-container-exit --exit-code-from your-service-name
        working-directory: ./NoodleStar

      # Archive build artifacts if necessary
      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: ./NoodleStar/build

      # Optionally, include Qodana or other tools if needed
